ggplot() +
geom_line(data = caro_sf, aes(x = E, y = N))
ggplot() +
geom_sf(data = caro_sf, aes(x = E, y = N))
ggplot() +
geom_sf(data = caro_sf, aes(x = E, y = N)) +
geom_sf(data = caro_3, aes(x = E, y = N))
ggplot() +
geom_sf(data = caro_sf, aes(x = E, y = N)) +
geom_sf(data = caro_3, aes(x = E, y = N, color = "red"))
ggplot() +
geom_sf(data = caro_sf, aes(x = E, y = N)) +
geom_sf(data = caro_3, aes(x = E, y = N), color = "red"))
ggplot() +
geom_sf(data = caro_sf, aes(x = E, y = N)) +
geom_sf(data = caro_3, aes(x = E, y = N), color = "red")
ggplot() +
geom_sf(data = caro_sf, aes(x = E, y = N), color = "blue") +
geom_sf(data = caro_3, aes(x = E, y = N), color = "red")
ggplot() +
geom_sf(data = caro_sf, aes(x = E, y = N), color = "blue") +
geom_sf(data = caro_3, aes(x = E, y = N, color = "3 minutes")) +
ggplot() +
geom_sf(data = caro_sf, aes(x = E, y = N), color = "blue") +
geom_sf(data = caro_3, aes(x = E, y = N, color = "3 minutes"))
ggplot() +
geom_sf(data = caro_sf, aes(x = E, y = N)) +
geom_sf(data = caro_3, aes(x = E, y = N, color = "3 minutes"))
ggplot() +
geom_sf(data = caro_sf, aes(x = E, y = N, color = "1 minute")) +
geom_sf(data = caro_3, aes(x = E, y = N, color = "3 minutes"))
ggplot() +
geom_sf(data = caro_sf, aes(x = E, y = N, color = "1 minute")) +
geom_sf(data = caro_3, aes(x = E, y = N, color = "3 minutes")) +
geom_sf(data = caro_6, aes(x = E, y = N, color = "6 minutes")) +
geom_sf(data = caro_9, aes(x = E, y = N, color = "9 minutes"))
ggplot() +
geom_sf(data = caro_sf, aes(x = E, y = N, color = "1 minute")) +
geom_sf(data = caro_9, aes(x = E, y = N, color = "9 minutes"))-> p3
caro <- read_csv("0_rawdata/caro60.csv")
caro_sf <- st_as_sf(caro, coords = c("E", "N"), crs = 2056, remove = FALSE)
caro_sf %>%
slice(seq(from=1, to = 200, by = 3)) -> caro_3
caro_sf %>%
slice(seq(from=1, to = 200, by = 6)) -> caro_6
caro_sf %>%
slice(seq(from=1, to = 200, by = 9)) -> caro_9
calculator <- function(df_input, interval){
df_input %>%
mutate(timelag = as.numeric(difftime(lead(DatetimeUTC),DatetimeUTC), units = "secs"),
steplength = sqrt((E - lead(E,1))^2 + (N - lead(N,1))^2),
speed = steplength/timelag,
interval = interval) -> df_output
return(df_output)
}
calculator(caro, "1 minute") -> caro
calculator(caro_3, "3 minutes") -> caro_3
calculator(caro_6, "6 minutes") -> caro_6
calculator(caro_9, "9 minutes") -> caro_9
rbind(caro, caro3, caro6, caro9) -> caro_merge
rbind(caro, caro_3, caro_6, caro_9) -> caro_merge
calculator(caro, "1 minute") -> caro
View(caro)
View(caro_3)
calculator(caro_sf, "1 minute") -> caro
calculator(caro_3, "3 minutes") -> caro_3
calculator(caro_6, "6 minutes") -> caro_6
calculator(caro_9, "9 minutes") -> caro_9
rbind(caro, caro_3, caro_6, caro_9) -> caro_merge
View(caro_merge)
View(caro_merge)
ggplot(data = caro_merge) +
geom_line(aes(x = DatetimeUC, y = speed, color = interval))
View(caro_sf)
View(caro_merge)
ggplot(data = caro_merge) +
geom_line(aes(x = DatetimeUTC, y = speed, color = interval))
geom_sf(data = caro_sf, aes(x = E, y = N, color = interval)) +
geom_sf(data = caro_sf, aes(x = E, y = N, color = interval))
geom_sf(aes(x = E, y = N, color = interval))
ggplot(data = caro_merge)) +
ggplot() +
geom_sf(data = caro_sf, aes(x = E, y = N, color = "1 minute")) +
geom_sf(data = caro_3, aes(x = E, y = N, color = "3 minutes")) -> p1
ggplot() +
geom_sf(data = caro_sf, aes(x = E, y = N, color = "1 minute")) +
geom_sf(data = caro_6, aes(x = E, y = N, color = "6 minutes")) -> p2
ggplot() +
geom_sf(data = caro_sf, aes(x = E, y = N, color = "1 minute")) +
geom_sf(data = caro_9, aes(x = E, y = N, color = "9 minutes"))-> p3
ggplot(data = caro_merge) +
geom_line(aes(x = DatetimeUTC, y = speed, color = interval))
ggplot(data = caro_merge) +
geom_sf(aes(x = E, y = N, color = interval))
ggplot(data = caro_merge) +
geom_line(aes(x = DatetimeUTC, y = speed, color = interval))
ggplot(data = caro_merge) +
geom_line(aes(x = E, y = N, color = interval))
ggplot(data = caro_merge) +
geom_line(aes(x = E, y = N, color = interval)) +
geom_point(aes(x = E, y = N, color = interval))
library(zoo)
caro %>%
mutate(speed_window = rollmean(speed))
caro %>%
mutate(speed_window = rollmean(speed, k = 3))
rollmean(caro$speed)
rollmean(caro$speed, k = 3)
library(tmap)
ggplot(data = caro_merge) +
geom_sf(aes(x = E, y = N, color = interval))
ggplot(data = caro_merge) +
geom_line(aes(x = E, y = N, color = interval))
ggplot(data = caro_merge) +
geom_line(aes(x = E, y = N, color = interval)) +
geom_point(aes(x = E, y = N, color = interval))
ggplot(data = caro_merge) +
geom_sf(aes(x = E, y = N, color = interval))
ggplot(data = caro_merge) +
geom_line(aes(x = E, y = N, color = interval)) +
geom_point(aes(x = E, y = N, color = interval))
ggplot(data = caro_merge) +
geom_path(aes(x = E, y = N, color = interval))
ggplot(data = caro_merge) +
geom_path(aes(x = E, y = N, color = interval)) +
geom_point(aes(x = E, y = N, color = interval))
caro_merge %>%
filter(interval == "1 minute" & interval == "3 minutes") %>%
ggplot(data = caro_merge) +
geom_path(aes(x = E, y = N, color = interval)) +
geom_point(aes(x = E, y = N, color = interval))
caro_merge %>%
filter(interval == "1 minute" & interval == "3 minutes") %>%
ggplot(data = .) +
geom_path(aes(x = E, y = N, color = interval)) +
geom_point(aes(x = E, y = N, color = interval))
caro_merge %>%
filter(interval == "1 minute" & "3 minutes") %>%
ggplot(data = .) +
geom_path(aes(x = E, y = N, color = interval)) +
geom_point(aes(x = E, y = N, color = interval))
caro_merge %>%
filter(interval == "1 minute" | interval  == "3 minutes") %>%
ggplot(data = .) +
geom_path(aes(x = E, y = N, color = interval)) +
geom_point(aes(x = E, y = N, color = interval))
caro_merge %>%
filter(interval == "1 minute" | interval  == "3 minutes") %>%
ggplot(data = .) +
geom_path(aes(x = E, y = N, color = interval, alpha = interval)) +
geom_point(aes(x = E, y = N, color = interval))
caro_merge %>%
filter(interval == "1 minute" | interval  == "3 minutes") %>%
ggplot(data = ., aes(x = E, y = N, color = interval, alpha = interval)) +
geom_path() +
geom_point()
caro_merge %>%
filter(interval == "1 minute" | interval  == "3 minutes") %>%
ggplot(data = ., aes(x = E, y = N, color = interval, alpha = c(0.6, 1))) +
geom_path() +
geom_point()
caro_merge %>%
filter(interval == "1 minute" | interval  == "3 minutes") %>%
ggplot(data = ., aes(x = E, y = N, color = interval), alpha = c(0.6, 1))) +
caro_merge %>%
filter(interval == "1 minute" | interval  == "3 minutes") %>%
ggplot(data = ., aes(x = E, y = N, color = interval)) +
geom_path() +
geom_point() +
scale_alpha(range = c(0.7, 1))
?scale_alpha_binned
caro_merge %>%
filter(interval == "1 minute" | interval  == "3 minutes") %>%
ggplot(data = ., aes(x = E, y = N, color = interval)) +
geom_path() +
geom_point() +
scale_alpha_discrete(range = c(0.7, 1))
caro_merge %>%
filter(interval == "1 minute" | interval  == "3 minutes") %>%
ggplot(data = ., aes(x = E, y = N, color = interval)) +
geom_path() +
geom_point() +
scale_alpha_discrete((range =) c(0.7, 1))
caro_merge %>%
filter(interval == "1 minute" | interval  == "3 minutes") %>%
ggplot(data = ., aes(x = E, y = N, color = interval)) +
geom_path() +
geom_point() +
scale_alpha_discrete( c(0.7, 1))
caro_merge %>%
filter(interval == "1 minute" | interval  == "3 minutes") %>%
ggplot(data = ., aes(x = E, y = N, color = interval)) +
geom_path() +
geom_point() +
scale_alpha_manual( c(0.7, 1))
caro_merge %>%
filter(interval == "1 minute" | interval  == "3 minutes") %>%
ggplot(data = ., aes(x = E, y = N, color = interval)) +
geom_path() +
geom_point() +
scale_alpha_manual( c(0.7, 1))
caro_merge %>%
filter(interval == "1 minute" | interval  == "3 minutes") %>%
ggplot(data = ., aes(x = E, y = N, color = interval)) +
geom_path() +
geom_point() +
scale_alpha_manual(values = c(0.7, 1))
caro_merge %>%
filter(interval == "1 minute" | interval  == "3 minutes") %>%
ggplot(data = ., aes(x = E, y = N, color = interval)) +
geom_path() +
geom_point() +
scale_alpha_manual(interval = c(0.7, 1))
caro_merge %>%
filter(interval == "1 minute" | interval  == "3 minutes") %>%
ggplot(data = ., aes(x = E, y = N, color = interval, alpha = interval)) +
geom_path() +
geom_point() +
scale_alpha_manual(interval = c(0.7, 1))
caro_merge %>%
filter(interval == "1 minute" | interval  == "3 minutes") %>%
ggplot(data = ., aes(x = E, y = N, color = interval, alpha = interval)) +
geom_path() +
geom_point()
caro_merge %>%
filter(interval == "1 minute" | interval  == "9 minutes") %>%
ggplot(data = ., aes(x = E, y = N, color = interval, alpha = interval)) +
geom_path() +
geom_point()
caro_merge %>%
filter(interval == "1 minute" | interval  == "9 minutes") %>%
ggplot(data = ., aes(x = E, y = N, color = interval, alpha = interval)) +
geom_path() +
geom_point() +
scale_alpha_discrete(range = c(0.35, 0.9))
caro_merge %>%
filter(interval == "1 minute" | interval  == "9 minutes") %>%
ggplot(data = ., aes(x = E, y = N, color = interval, alpha = interval)) +
geom_path() +
geom_point() +
scale_alpha_discrete(range = c(0.35, 1))
caro_merge %>%
filter(interval == "1 minute" | interval  == "9 minutes") %>%
ggplot(data = ., aes(x = E, y = N, color = interval, alpha = interval)) +
geom_path() +
geom_point() +
scale_alpha_discrete(range = c(0.6, 1))
caro_merge %>%
filter(interval == "1 minute" | interval  == "9 minutes") %>%
ggplot(data = ., aes(x = E, y = N, color = interval, alpha = interval)) +
geom_path() +
geom_point() +
scale_alpha_discrete(range = c(0.4, 1))
ggplot() +
geom_sf(data = caro_sf, aes(x = E, y = N, color = "1 minute")) +
geom_sf(data = caro_3, aes(x = E, y = N, color = "3 minutes")) -> p1
ggplot() +
geom_sf(data = caro_sf, aes(x = E, y = N, color = "1 minute")) +
geom_sf(data = caro_6, aes(x = E, y = N, color = "6 minutes")) -> p2
ggplot() +
geom_sf(data = caro_sf, aes(x = E, y = N, color = "1 minute")) +
geom_sf(data = caro_9, aes(x = E, y = N, color = "9 minutes"))-> p3
ggplot(data = caro_merge) +
geom_line(aes(x = DatetimeUTC, y = speed, color = interval))
ggplot(data = caro_merge) +
geom_sf(aes(x = E, y = N, color = interval))
caro_merge %>%
filter(interval == "1 minute" | interval  == "3 minutes") %>%
ggplot(data = ., aes(x = E, y = N, color = interval, alpha = interval)) +
geom_path() +
geom_point() +
scale_alpha_discrete(range = c(0.4, 1)) -> p1
caro_merge %>%
filter(interval == "1 minute" | interval  == "6 minutes") %>%
ggplot(data = ., aes(x = E, y = N, color = interval, alpha = interval)) +
geom_path() +
geom_point() +
scale_alpha_discrete(range = c(0.4, 1)) -> p2
caro_merge %>%
filter(interval == "1 minute" | interval  == "9 minutes") %>%
ggplot(data = ., aes(x = E, y = N, color = interval, alpha = interval)) +
geom_path() +
geom_point() +
scale_alpha_discrete(range = c(0.4, 1)) -> p3
ggarrange(p1, p2, p3)
ggplot(data = caro_merge) +
geom_line(aes(x = DatetimeUTC, y = speed, color = interval))
caro_merge %>%
filter(interval == "1 minute" | interval  == "3 minutes") %>%
ggplot(data = ., aes(x = E, y = N, color = interval, alpha = interval)) +
geom_path() +
geom_point() +
scale_alpha_discrete(range = c(0.4, 1)) -> p1
caro_merge %>%
filter(interval == "1 minute" | interval  == "6 minutes") %>%
ggplot(data = ., aes(x = E, y = N, color = interval, alpha = interval)) +
geom_path() +
geom_point() +
scale_alpha_discrete(range = c(0.4, 1)) -> p2
caro_merge %>%
filter(interval == "1 minute" | interval  == "9 minutes") %>%
ggplot(data = ., aes(x = E, y = N, color = interval, alpha = interval)) +
geom_path() +
geom_point() +
scale_alpha_discrete(range = c(0.4, 1)) -> p3
ggarrange(p1, p2, p3)
ggarrange(p1, p2, p3, cols = 3)
ggarrange(p1, p2, p3, col = 3)
ggarrange(p1, p2, p3, cols = 3)
rollmean(caro$speed, k = 3) -> caro$speed_roll
rollmean(caro$speed, k = 4)
rollmean(caro$speed, k = 2)
rollmean(caro$speed, k = 7)
ggarrange(p1, p2, p3, nocl = 3)
ggarrange(p1, p2, p3, ncol = 3)
ggarrange(p1, p2, p3, nrow = 3)
ggarrange(p1, p2, p3)
rollmean(caro$speed, k = 7)
caro %>%
mutate(rollspeed = rollmean(caro$speed, na.pad = TRUE))
caro %>%
mutate(rollspeed = rollmean(caro$speed, k=3, na.pad = TRUE))
caro %>%
mutate(rollspeed_k3 = rollmean(caro$speed, k=3, na.pad = TRUE),
rollspeed_k6 = rollmean(caro$speed, k=6, na.pad = TRUE),
rollspeed_k9 = rollmean(caro$speed, k=9, na.pad = TRUE)) -> test
View(test)
ggplot(data = caro) +
geom_line(aes(x = DatetimeUTC, y = speed, color = "speed")) +
geom_line(aes(x = DatetimeUTC, y = rollspeed_k3, color = "K3")) +
geom_line(aes(x = DatetimeUTC, y = rollspeed_k3, color = "K6")) +
geom_line(aes(x = DatetimeUTC, y = rollspeed_k3, color = "K9"))
ggplot(data = test) +
geom_line(aes(x = DatetimeUTC, y = speed, color = "speed")) +
geom_line(aes(x = DatetimeUTC, y = rollspeed_k3, color = "K3")) +
geom_line(aes(x = DatetimeUTC, y = rollspeed_k3, color = "K6")) +
geom_line(aes(x = DatetimeUTC, y = rollspeed_k3, color = "K9"))
caro %>%
mutate(rollspeed_k3 = rollmean(caro$speed, k=3, na.pad = TRUE),
rollspeed_k6 = rollmean(caro$speed, k=6, na.pad = TRUE),
rollspeed_k9 = rollmean(caro$speed, k=9, na.pad = TRUE),
rollspeed_k12 = rollmean(caro$speed, k=12, na.pad = TRUE)) -> test
ggplot(data = test) +
geom_line(aes(x = DatetimeUTC, y = speed, color = "speed")) +
geom_line(aes(x = DatetimeUTC, y = rollspeed_k3, color = "K3")) +
geom_line(aes(x = DatetimeUTC, y = rollspeed_k3, color = "K6")) +
geom_line(aes(x = DatetimeUTC, y = rollspeed_k3, color = "K9")) +
geom_line(aes(x = DatetimeUTC, y = rollspeed_k12, color = "K12"))
View(df)
ggplot(data = test) +
geom_line(aes(x = DatetimeUTC, y = speed, color = "speed")) +
geom_line(aes(x = DatetimeUTC, y = rollspeed_k3, color = "K3")) +
geom_line(aes(x = DatetimeUTC, y = rollspeed_k3, color = "K6")) +
geom_line(aes(x = DatetimeUTC, y = rollspeed_k3, color = "K9")) +
geom_line(aes(x = DatetimeUTC, y = rollspeed_k12, color = "K12")) +
geom_line(aes(x = DatetimeUTC, y = rollspeed_k24, color = "K24"))
caro %>%
mutate(rollspeed_k3 = rollmean(caro$speed, k=3, na.pad = TRUE),
rollspeed_k6 = rollmean(caro$speed, k=6, na.pad = TRUE),
rollspeed_k9 = rollmean(caro$speed, k=9, na.pad = TRUE),
rollspeed_k12 = rollmean(caro$speed, k=12, na.pad = TRUE),
rollspeed_k24 = rollmean(caro$speed, k=24, na.pad = TRUE)) -> test
ggplot(data = test) +
geom_line(aes(x = DatetimeUTC, y = speed, color = "speed")) +
geom_line(aes(x = DatetimeUTC, y = rollspeed_k3, color = "K3")) +
geom_line(aes(x = DatetimeUTC, y = rollspeed_k3, color = "K6")) +
geom_line(aes(x = DatetimeUTC, y = rollspeed_k3, color = "K9")) +
geom_line(aes(x = DatetimeUTC, y = rollspeed_k12, color = "K12")) +
geom_line(aes(x = DatetimeUTC, y = rollspeed_k24, color = "K24"))
library(RColorBrewer)
ggplot(data = ws_be_sf) +
geom_bar(aes(x = timelag), stat = "count")
ws_be_sf %>%
st_drop_geometry() %>%
group_by(TierID, TierName) %>%
summarise(pings = n(),
start_time = min(DatetimeUTC),
end_time = max(DatetimeUTC),
avg_sample_time = mean(timelag, na.rm = T),
total_tracking_time = sum(timelag, na.rm = T)) %>%
mutate(tracking_time_days = days(day(seconds_to_period(tracking_time))))
ws_be_sf %>%
st_drop_geometry() %>%
group_by(TierID, TierName) %>%
summarise(pings = n(),
start_time = min(DatetimeUTC),
end_time = max(DatetimeUTC),
avg_sample_time = mean(timelag, na.rm = T),
total_tracking_time = sum(timelag, na.rm = T)) %>%
mutate(tracking_time_days = days(day(seconds_to_period(total_tracking_time))))
ws_be_sf %>%
st_drop_geometry() %>%
group_by(TierID, TierName) %>%
summarise(pings = n(),
start_time = min(DatetimeUTC),
end_time = max(DatetimeUTC),
avg_interval = mean(timelag, na.rm = T),
total_tracking_time = sum(timelag, na.rm = T)) %>%
mutate(tracking_time_days = days(day(seconds_to_period(total_tracking_time))))
ggplot(data = ws_be_sf) +
geom_line(aes(x = DatetimeUTC, y = TierID)) -> p1
ggplot(data = ws_be_sf) +
geom_bar(aes(x = timelag), stat = "position")
ws_be_sf %>%
st_drop_geometry() %>%
group_by(TierID, TierName) %>%
summarise(pings = n(),
start_time = min(DatetimeUTC),
end_time = max(DatetimeUTC),
avg_interval = mean(timelag, na.rm = T),
total_tracking_time = sum(timelag, na.rm = T)) %>%
mutate(tracking_time_days = days(day(seconds_to_period(total_tracking_time))))
ggplot(data = ws_be_sf, aes(x = DatetimeUTC, y = TierID)) +
geom_line() + geom_point() ->
ggplot(data = ws_be_sf) +
geom_bar(aes(x = timelag), stat = "position")
ggplot(data = ws_be_sf, aes(x = DatetimeUTC, y = TierID)) +
geom_line() + geom_point()
ggplot(data = ws_be_sf, aes(x = DatetimeUTC, y = TierID)) +
geom_line()
ggplot(data = ws_be_sf) +
geom_bar(aes(x = timelag))
ggplot(data = ws_be_sf) +
geom_stat(aes(x = timelag))
ggplot(data = ws_be_sf) +
geom_bar(aes(x = timelag))
ggplot(data = ws_be) +
geom_bar(aes(x = timelag))
ggplot(data = ws_be_sf) +
geom_bar(aes(x = timelag), stat = "bin")
ggplot(data = ws_be_sf) +
geom_bar(aes(x = timelag), stat = "bin")
ws_be_sf %>%
group_by(TierID) %>%
mutate(., timelag = as.integer(difftime(lead(DatetimeUTC),DatetimeUTC), units = "secs")) -> ws_be_sf
ws_be <- read_csv("0_rawdata/wildschwein_BE.csv")
ws_be_sf <- st_as_sf(ws_be, coords = c("E", "N"), crs = 2056, remove = FALSE)
ws_be_sf %>%
group_by(TierID) %>%
mutate(., timelag = as.integer(difftime(lead(DatetimeUTC),DatetimeUTC), units = "secs")) -> ws_be_sf
ws_be_sf %>%
group_by(TierID) %>%
summarise(timelag = as.integer(difftime(lead(DatetimeUTC),DatetimeUTC), units = "secs")) -> ws_be_sf2
ws_be_sf %>%
group_by(TierID) %>%
mutate(timelag = as.integer(difftime(lead(DatetimeUTC),DatetimeUTC), units = "secs")) -> ws_be_sf1
ws_be_sf %>%
group_by(TierID) %>%
mutate(timelag = as.integer(difftime(lead(DatetimeUTC),DatetimeUTC), units = "secs")) -> ws_be_sf
ws_be <- read_csv("0_rawdata/wildschwein_BE.csv")
ws_be_sf <- st_as_sf(ws_be, coords = c("E", "N"), crs = 2056, remove = FALSE)
ws_be <- read_csv("0_rawdata/wildschwein_BE.csv")
ws_be_sf <- st_as_sf(ws_be, coords = c("E", "N"), crs = 2056, remove = FALSE)
## Taks 2: Getting an overview
Lets first have a look at the difftime function
```{r}
ws_be_sf %>%
group_by(TierID) %>%
mutate(timelag = as.integer(difftime(lead(DatetimeUTC),DatetimeUTC), units = "secs")) -> ws_be_sf
```{r}
ws_be_sf %>%
group_by(TierID) %>%
mutate(timelag = as.integer(difftime(lead(DatetimeUTC),DatetimeUTC), units = "secs")) -> ws_be_sf
ws_be_sf %>%
st_drop_geometry() %>%
group_by(TierID, TierName) %>%
summarise(pings = n(),
start_time = min(DatetimeUTC),
end_time = max(DatetimeUTC),
avg_interval = mean(timelag, na.rm = T),
total_tracking_time = sum(timelag, na.rm = T)) %>%
mutate(tracking_time_days = days(day(seconds_to_period(total_tracking_time))))
ggplot(data = ws_be_sf, aes(x = DatetimeUTC, y = TierID)) +
geom_line()
ggplot(data = ws_be_sf, aes(x = DatetimeUTC, y = timelag)) +
geom_line()
ggplot(data = ws_be_sf, aes(x = DatetimeUTC, y = timelag, color = TierID)) +
geom_line()
ggplot(data = ws_be_sf, aes(x=TierID, y = time_lag)) +
geom_boxplot()
ggplot(data = ws_be_sf, aes(x=TierID, y = timelag)) +
geom_boxplot()
ggplot(data = ws_be_sf) +
geom_bar(aes(x = timelag), stat = "bin")
ggplot(data = ws_be_sf) +
geom_bar(aes(x = timelag), stat = "count ")
ggplot(data = ws_be_sf) +
geom_bar(aes(x = timelag, color = TierID), stat = "bin")
ggplot(data = ws_be_sf) +
geom_bar(aes(x = timelag, fill = TierID), stat = "bin")
ggplot(data = ws_be_sf) +
geom_bar(aes(x = timelag, fill = TierID), stat = "position")
ggplot(data = ws_be_sf) +
geom_col(aes(x = timelag, fill = TierID), stat = "position")
ggplot(data = ws_be_sf) +
geom_col(aes(x = timelag, fill = TierID))
ggplot(data = ws_be_sf) +
geom_bar(aes(x = timelag, fill = TierID))
ggplot(data = ws_be_sf, aes(x = timelag)) +
geom_bar()
ggplot(data = ws_be_sf, aes(x = DatetimeUTC, y = TierID)) +
geom_line()
ggplot(data = ws_be_sf, aes(x = timelag)) +
geom_bar()
ggplot(data = ws_be_sf, aes(x = DatetimeUTC, y = timelag, color = TierID)) +
geom_line()
ggplot(data = ws_be_sf, aes(x=TierID, y = timelag)) +
geom_boxplot()
ggplot(data = ws_be_sf, aes(x = timelag)) +
geom_bar()  #I can't seem to get this to work
ggplot(data = ws_be_sf, aes(x = DatetimeUTC, y = timelag, color = TierID)) +
geom_line()
